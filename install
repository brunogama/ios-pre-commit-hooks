#!/bin/bash
set -e # Exit immediately if a command exits with a non-zero status.

# --- Configuration ---
# !!! IMPORTANT: Update this line with your actual GitHub username and repository name !!!
REPO_URL="https://github.com/brunogama/pre-commit-configs"
# You can change "main" to your default branch if it's different
BRANCH="main"
# --- End Configuration ---

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

ARCHIVE_URL="$REPO_URL/archive/refs/heads/$BRANCH.tar.gz"
TMP_DIR=$(mktemp -d)
CONFIG_FILE=".pre-commit-config.yaml"
SCRIPTS_DIR="scripts"
TERM_HEIGHT=$(tput lines)
TERM_WIDTH=$(tput cols)
MENU_HEIGHT=$((TERM_HEIGHT-8))

# Function to check if whiptail is available
check_whiptail() {
    if ! command -v whiptail >/dev/null 2>&1; then
        echo -e "${YELLOW}whiptail is not installed. Installing text-only version...${NC}"
        sleep 2
        return 1
    fi
    return 0
}

# Function to show progress gauge
show_progress() {
    local message="$1"
    local current="$2"
    local total="$3"
    local percentage=$((current * 100 / total))
    echo "XXX"
    echo "$percentage"
    echo "$message"
    echo "XXX"
}

# Function to clean up the temporary directory on exit
cleanup() {
    echo "Cleaning up temporary directory: $TMP_DIR"
    rm -rf "$TMP_DIR"
}
trap cleanup EXIT

# Function to create scripts directory and copy script files
setup_scripts() {
    local total_steps=3
    local current_step=0
    
    {
        current_step=$((current_step + 1))
        show_progress "Creating scripts directory..." "$current_step" "$total_steps"
        mkdir -p "$SCRIPTS_DIR"
        sleep 1
        
        current_step=$((current_step + 1))
        show_progress "Copying script templates..." "$current_step" "$total_steps"
        if [ -d "$TMP_DIR/scripts" ]; then
            cp -f "$TMP_DIR/scripts/"*.sh "$SCRIPTS_DIR/" 2>/dev/null || true
            chmod +x "$SCRIPTS_DIR"/*.sh
        fi
        sleep 1
        
        current_step=$((current_step + 1))
        show_progress "Finalizing script setup..." "$current_step" "$total_steps"
        sleep 1
    } | whiptail --gauge "Setting up script files..." 8 70 0
}

# Function to verify script dependencies
verify_dependencies() {
    local missing_deps=()
    local commands=("grep" "find" "xargs" "git" "pre-commit")
    local deps_message=""
    
    for cmd in "${commands[@]}"; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            missing_deps+=("$cmd")
        fi
    done
    
    if command -v xcode-select >/dev/null 2>&1; then
        if ! xcode-select -p >/dev/null 2>&1; then
            missing_deps+=("xcode-tools")
        fi
    fi
    
    if [ ${#missing_deps[@]} -ne 0 ]; then
        deps_message="The following dependencies are missing:\n\n"
        for dep in "${missing_deps[@]}"; do
            deps_message+="  â€¢ $dep\n"
        done
        deps_message+="\nPlease install them and try again."
        
        whiptail --title "Missing Dependencies" --msgbox "$deps_message" 12 60
        exit 1
    fi
}

# Function to download and extract repository
setup_repository() {
    {
        show_progress "Downloading repository..." 33 100
        if ! curl -sSL -o "$TMP_DIR/repo.tar.gz" "$ARCHIVE_URL"; then
            whiptail --title "Error" --msgbox "Failed to download repository from $ARCHIVE_URL" 8 60
            exit 1
        fi
        sleep 1
        
        show_progress "Extracting files..." 66 100
        if ! tar -xzf "$TMP_DIR/repo.tar.gz" -C "$TMP_DIR" --strip-components=1; then
            whiptail --title "Error" --msgbox "Failed to extract repository archive" 8 60
            exit 1
        fi
        sleep 1
        
        show_progress "Finalizing setup..." 100 100
        sleep 1
    } | whiptail --gauge "Setting up repository..." 8 70 0
}

# Function to install selected hook types
install_hook_types() {
    local hook_types=()
    local options=(
        "pre-commit" "Run hooks on pre-commit" ON
        "pre-push" "Run hooks before push" OFF
        "commit-msg" "Check commit messages" OFF
    )
    
    hook_types=$(whiptail --title "Select Hook Types" \
        --checklist "Choose which hook types to install:" 15 60 3 \
        "${options[@]}" \
        3>&1 1>&2 2>&3)
    
    if [ $? -eq 0 ]; then
        {
            local total_hooks=$(echo "$hook_types" | wc -w)
            local current=0
            
            for hook_type in $hook_types; do
                current=$((current + 1))
                hook_type=${hook_type//\"/}
                show_progress "Installing $hook_type hooks..." "$current" "$total_hooks"
                pre-commit install -t "$hook_type"
                sleep 1
            done
        } | whiptail --gauge "Installing hooks..." 8 70 0
    fi
}

# Main installation process
main() {
    if ! check_whiptail; then
        # Fall back to non-GUI version
        source ./install-no-gui
        exit 0
    fi
    
    # Welcome message
    whiptail --title "Pre-commit Hooks Installer" \
        --msgbox "Welcome to the Pre-commit Hooks Installer!\n\nThis will set up pre-commit hooks and necessary scripts for your project." 10 60
    
    # Verify dependencies
    verify_dependencies
    
    # Download and extract repository
    setup_repository
    
    # Setup base configuration
    if [ ! -f "$CONFIG_FILE" ]; then
        if whiptail --title "Configuration" --yesno "Create new .pre-commit-config.yaml file?" 8 60; then
            cat > "$CONFIG_FILE" << 'EOF'
# Default configurations
default_stages: [pre-commit]
default_install_hook_types: [pre-commit, pre-push, commit-msg]
default_language_version:
  python: python3

repos:
EOF
        fi
    fi
    
    # Setup scripts
    if whiptail --title "Script Files" --yesno "Install script files for hooks?" 8 60; then
        setup_scripts
    fi
    
    # Install hooks
    install_hook_types
    
    # Final message
    whiptail --title "Installation Complete" \
        --msgbox "Installation completed successfully!\n\nTo verify the installation, run:\npre-commit run --all-files\n\nScript files are installed in: $SCRIPTS_DIR" 12 60
}

# Start the installation
main
exit 0
