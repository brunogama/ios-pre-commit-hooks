#!/bin/bash
set -e # Exit immediately if a command exits with a non-zero status.

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

CONFIG_FILE=".pre-commit-config.yaml"
SCRIPTS_DIR="scripts"

# Function to confirm action
confirm() {
    echo -e "${YELLOW}WARNING: This will remove all pre-commit hooks, configuration, and script files.${NC}"
    echo -e "${YELLOW}Are you sure you want to continue? (y/n)${NC}"
    read -r CONFIRM
    if [[ ! "$CONFIRM" =~ ^[Yy]$ ]]; then
        echo -e "${BLUE}Operation cancelled.${NC}"
        exit 0
    fi
}

# Function to remove script files
remove_scripts() {
    if [ -d "$SCRIPTS_DIR" ]; then
        echo -e "${BLUE}Removing script files...${NC}"
        # List files being removed
        echo -e "${YELLOW}The following script files will be removed:${NC}"
        ls -1 "$SCRIPTS_DIR"/*.sh 2>/dev/null || true
        
        # Remove all .sh files in scripts directory
        rm -f "$SCRIPTS_DIR"/*.sh 2>/dev/null || true
        
        # Try to remove scripts directory if empty
        rmdir "$SCRIPTS_DIR" 2>/dev/null || {
            echo -e "${YELLOW}Note: $SCRIPTS_DIR directory not removed as it contains other files${NC}"
        }
        
        echo -e "${GREEN}Script files removed successfully!${NC}"
    else
        echo -e "${YELLOW}No script files found in $SCRIPTS_DIR${NC}"
    fi
}

# Main uninstall process
main() {
    echo -e "${BLUE}Starting uninstall process...${NC}"

    # Uninstall pre-commit hooks
    if command -v pre-commit >/dev/null 2>&1; then
        echo -e "${BLUE}Uninstalling pre-commit hooks...${NC}"
        # Clean pre-commit cache first
        pre-commit clean || true
        
        # Uninstall all hook types
        for hook_type in pre-commit pre-push commit-msg; do
            pre-commit uninstall -t "$hook_type" || {
                echo -e "${YELLOW}Warning: Failed to uninstall $hook_type hooks${NC}"
            }
        done
        
        # General uninstall (for any remaining hooks)
        pre-commit uninstall || {
            echo -e "${YELLOW}Warning: Failed to uninstall remaining hooks${NC}"
        }
    fi

    # Remove script files
    remove_scripts

    # Remove .pre-commit-config.yaml if it exists
    if [ -f "$CONFIG_FILE" ]; then
        echo -e "${BLUE}Removing $CONFIG_FILE...${NC}"
        rm "$CONFIG_FILE" || {
            echo -e "${RED}Error: Failed to remove $CONFIG_FILE${NC}"
            exit 1
        }
    else
        echo -e "${YELLOW}No $CONFIG_FILE found.${NC}"
    fi

    # Remove pre-commit cache directory if it exists
    if [ -d ~/.cache/pre-commit ]; then
        echo -e "${BLUE}Removing pre-commit cache...${NC}"
        rm -rf ~/.cache/pre-commit || {
            echo -e "${YELLOW}Warning: Failed to remove pre-commit cache${NC}"
        }
    fi

    echo -e "${GREEN}Uninstall completed successfully!${NC}"
    echo -e "${BLUE}Note: If you want to completely remove pre-commit, you can also run:${NC}"
    echo -e "${YELLOW}pip uninstall pre-commit${NC}"
}

# Start the process
confirm
main
exit 0 